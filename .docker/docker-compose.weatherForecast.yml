services:
  weatherforecastapi:
    image: distributed/weatherforecastapi:latest
    container_name: weatherforecastapi
    restart: always
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Path=${WEATHERFORECAST_ASPNETCORE_Kestrel__Certificates__Default__Path}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${WEATHERFORECAST_ASPNETCORE_Kestrel__Certificates__Default__Password}
      - ASPNETCORE_ENVIRONMENT=${WEATHERFORECAST_ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=${WEATHERFORECAST_ASPNETCORE_URLS}
      - AppName=${WEATHERFORECAST_AppName}
      - keysFolder=${WEATHERFORECAST_keysFolder}
      - ConnectionStrings__DistributedContext
      - ConnectionStrings__MongoDbConnection
      - ConnectionStrings__RedisConnection
      - ConnectionStrings__OpenTelemetry
      - RabbitMqData__HostName
      - RabbitMqData__Credentials__Username
      - RabbitMqData__Credentials__Password
      - RabbitMqData__Publisher__IntegrationExchange
      - RabbitMqData__Publisher__DomainExchange
    ports:
      - "7325:80"
      - "7326:443"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost/health | grep -w '[Hh]ealthy' || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 2s
    volumes:
      - dotnetapp_keys_data:${WEATHERFORECAST_keysFolder}

volumes:
  dotnetapp_keys_data:
